<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://gtrboy.github.io/</id><title>gtrboy's blog</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2022-05-07T12:57:08+08:00</updated> <author> <name>gtrboy</name> <uri>https://gtrboy.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://gtrboy.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="https://gtrboy.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 gtrboy </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>【翻译】西部数据PR4100 NAS RCE漏洞分析（CVE-2022-23121）</title><link href="https://gtrboy.github.io/posts/CVE-2022-23121/" rel="alternate" type="text/html" title="【翻译】西部数据PR4100 NAS RCE漏洞分析（CVE-2022-23121）" /><published>2022-05-01T11:11:00+08:00</published> <updated>2022-05-01T11:11:00+08:00</updated> <id>https://gtrboy.github.io/posts/CVE-2022-23121/</id> <content src="https://gtrboy.github.io/posts/CVE-2022-23121/" /> <author> <name>gtrboy</name> </author> <category term="pwn" /> <summary> 本文翻译自NCC Group的博客，介绍了该团队在Pwn2Own比赛时针对西部数据PR4100 NAS的远程代码执行漏洞利用的细节。 概述 这篇博客文章介绍了2021年9月由NCC Group的Exploit Development Group（EDG）小组中的Alex Plaskett，Cedric Halbronn以及Aaron Adams三人发现并利用的一个返回值未检测漏洞。我们在2021年9月的Pwn2Own 2021的比赛中成功利用了该漏洞，攻击目标是西部数据PR4100 NAS设备。西部数据发布了发布了一个固件更新（5.19.117），完全移除了对存在漏洞的第三方“没什么价值的Netatalk服务”的支持。由于该漏洞在Netatalk代码中得到了确认，因此被分配了CVE-2022-23121编号，同时ZDI发布了关于该漏洞的一份报告并提到Netatalk发布了最... </summary> </entry> <entry><title>pwnable.tw CVE-2018-1160</title><link href="https://gtrboy.github.io/posts/netatalk/" rel="alternate" type="text/html" title="pwnable.tw CVE-2018-1160" /><published>2021-11-08T08:20:00+08:00</published> <updated>2021-11-08T08:20:00+08:00</updated> <id>https://gtrboy.github.io/posts/netatalk/</id> <content src="https://gtrboy.github.io/posts/netatalk/" /> <author> <name>gtrboy</name> </author> <category term="pwn" /> <summary> pwnable.tw于2020年新增题目CVE-2018-1160，分值100，题目曾出现在hitcon2019，1day漏洞利用。漏洞源自于一款开源的苹果AFP（Apple Filing Protocol）协议服务器程序Netatalk。和xuanxuan一起做了这道题。 可参考wp如下： CVE-2018-1160: Expanding the original 18 year old vulnerability exploit HITCON CTF 2019 Pwn 371 Netatalk Exploiting an 18 Year Old Bug (漏洞发现者原文) 和徐老一起学Pwn 之 Pwnable CVE-2018-1160 CVE-2018-1160 netatalk越界漏洞复现及分析 Netata... </summary> </entry> <entry><title>L* 算法学习</title><link href="https://gtrboy.github.io/posts/L_star/" rel="alternate" type="text/html" title="L* 算法学习" /><published>2021-07-27T17:20:00+08:00</published> <updated>2021-07-30T08:41:51+08:00</updated> <id>https://gtrboy.github.io/posts/L_star/</id> <content src="https://gtrboy.github.io/posts/L_star/" /> <author> <name>gtrboy</name> </author> <category term="自动机" /> <summary> 本篇旨在记录自己学习L*算法的过程和理解。 参考： 吴礼发老师的《网络协议逆向分析及应用》 L*算法创世文：Learning Regular Sets from Queries and Counterexamples* 基于米利机的LM*算法：Reverse Engineering Enhanced State Models of Black Box Software Components to support Integration Testing 关于Model Learning的综述：Model Learning: A Survey on Foundation, Tools and Applications 对L*算法的理解和优化：Insights to Angluin’s Learning 找到的唯一一篇中文对L*算... </summary> </entry> <entry><title>malloc源码学习（glibc-2.23）</title><link href="https://gtrboy.github.io/posts/malloc/" rel="alternate" type="text/html" title="malloc源码学习（glibc-2.23）" /><published>2021-07-25T17:20:00+08:00</published> <updated>2021-11-08T17:49:01+08:00</updated> <id>https://gtrboy.github.io/posts/malloc/</id> <content src="https://gtrboy.github.io/posts/malloc/" /> <author> <name>gtrboy</name> </author> <category term="pwn_base" /> <summary> 学习glibc-2.23源码中malloc相关知识，文章顺序和malloc流程相同。本文仅为自己缕清思路用，因此很多细节和基础没有涉及，可能会比较乱。若你看到了这篇文章，推荐看下面的博客，介绍得可能会更加细致。 参考： Linux内存分配小结–malloc、brk、mmap 董哥的黑板报 - 堆漏洞挖掘 堆漏洞挖掘中的bins分类(fastbin、unsorted bin、small bin、large bin) 堆漏洞挖掘中bins的单向链表、双向链表存储结构 glibc-malloc源码分析 glibc-malloc-c源码阅读笔记 重要结构体 malloc_state（arena） struct malloc_state { /* Serialize access. */ mutex_t m... </summary> </entry> <entry><title>物联网设备消息总线机制的使用及安全问题</title><link href="https://gtrboy.github.io/posts/bus/" rel="alternate" type="text/html" title="物联网设备消息总线机制的使用及安全问题" /><published>2021-07-16T18:43:00+08:00</published> <updated>2021-11-08T17:49:01+08:00</updated> <id>https://gtrboy.github.io/posts/bus/</id> <content src="https://gtrboy.github.io/posts/bus/" /> <author> <name>gtrboy</name> </author> <category term="IoT" /> <summary> 本文对物联网设备中常用的两种消息总线机制——MQTT协议及ubus系统 进行介绍，并用两个真实设备（totolink路由器、2021强网杯小米路由器）的漏洞介绍它们的安全问题。 0x00 引言 提到总线（BUS），我们通常会想到和计算机硬件相关的总线机制，如数据总线、地址总线、控制总线和汽车用到的CAN总线等。但是，由于总线机制松耦合的特性，其越来越多的被物联网设备开发者应用于操作系统软件中，用来处理进程间或者设备间事件、消息的分发和处理。 物联网设备中的消息总线机制可以非常方便地实现设备间/进程间通信。在消息总线模型中，通常包含三种角色： 总线服务端，用来实现消息的分发，并接收客户端的消息订阅与注册（如下文将提到的ubusd以及MQTT代理）。 消息接收端，向总线服务端订阅/注册自己感兴趣的消息主题/对象，等待总线服务器发来的消息，并调用回调函数进行处理。 ... </summary> </entry> </feed>
